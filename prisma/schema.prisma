// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            Int         @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String
  phone         Int
  username      String?
  password      String?
  roleId        Role        @default(USER)
  createAt      DateTime
  updateAt      DateTime
  status        Boolean
  reviews       Review      @relation(fields: [reviewId], references: [id])
  reviewId      Int
  playments     Playment    @relation(fields: [playmentId], references: [id])
  playmentId    Int
  reservations  Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int

  @@map("users")
}

model Restaurant {
  id             Int         @id @default(autoincrement())
  restaurantName String
  address        String
  phone          Int
  description    String
  menus          Menu        @relation(fields: [menuId], references: [id])
  menuId         Int
  reservations   Reservation @relation(fields: [reservationId], references: [id])
  reservationId  Int
  reviews        Review      @relation(fields: [reviewId], references: [id])
  reviewId       Int

  @@map("restaurants")
}

model Review {
  id         Int          @id @default(autoincrement())
  rate       String
  comment    String
  create_at  DateTime
  User       User[]
  Restaurant Restaurant[]

  @@map("reviews")
}

model MenuImg {
  id  Int    @id @default(autoincrement())
  url String

  @@map("menuImgs")
}

model Menu {
  id         Int          @id @default(autoincrement())
  name       String
  Restaurant Restaurant[]

  @@map("menus")
}

model Reservation {
  id           Int          @id @default(autoincrement())
  bookingTable String
  bookingDate  DateTime
  status       String
  update       String
  User         User[]
  Restaurant   Restaurant[]
  Typetable    Typetable[]
  playments    Playment     @relation(fields: [playmentId], references: [id])
  playmentId   Int

  @@map("reservations")
}

model Typetable {
  id            Int         @id @default(autoincrement())
  type_name     String
  price         String
  reservations  Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int

  @@map("typetables")
}

model Bookingstatus {
  id          Int    @id @default(autoincrement())
  status_name String

  @@map("bookingstatuss")
}

model Playment {
  id          Int           @id @default(autoincrement())
  price       String
  create_at   DateTime
  sleept      String
  User        User[]
  Reservation Reservation[]

  @@map("playments")
}
